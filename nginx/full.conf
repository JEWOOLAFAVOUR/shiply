# Default catch-all server
server {
    listen 80 default_server;
    server_name _;
    
    # Default response for unknown domains
    location / {
        return 200 'ðŸš€ Shiply PaaS Platform - No app deployed on this domain\n';
        add_header Content-Type text/plain;
    }
}

# Main Shiply platform
server {
    listen 80;
    server_name shiply.local;
    
    location / {
        proxy_pass http://host.docker.internal:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# API endpoint
server {
    listen 80;
    server_name api.shiply.local;
    
    location / {
        proxy_pass http://host.docker.internal:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# User apps will be dynamically added here
# Format: app-name.shiply.local -> localhost:port

# Example user app routes (these will be generated dynamically)
# server {
#     listen 80;
#     server_name ~^(?<app>.+)\.shiply\.local$;
#     
#     location / {
#         # This will be dynamically configured per app
#         proxy_pass http://host.docker.internal:$port;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }

# old-backend-checking - Auto-generated configuration
server {
    listen 80;
    server_name old-backend-checking.shiply.local;
    
    # Add custom headers for debugging
    add_header X-Shiply-App "old-backend-checking" always;
    add_header X-Shiply-Container "old-backend-checking-cmh39cbmp000055rgvv9ovxgw-v1761331305920" always;
    
    location / {
        proxy_pass http://host.docker.internal:32769;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Handle WebSockets
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
